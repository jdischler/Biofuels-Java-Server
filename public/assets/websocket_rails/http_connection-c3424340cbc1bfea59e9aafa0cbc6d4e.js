/*
 HTTP Interface for the WebSocketRails client.
*/
(function(){var e=function(e,t){return function(){return e.apply(t,arguments)}};WebSocketRails.HttpConnection=function(){function t(t,n){this.url=t,this.dispatcher=n,this.flush_queue=e(this.flush_queue,this),this.trigger=e(this.trigger,this),this.parse_stream=e(this.parse_stream,this),this.createXMLHttpObject=e(this.createXMLHttpObject,this),this._conn=this.createXMLHttpObject(),this.last_pos=0,this.message_queue=[],this._conn.onreadystatechange=this.parse_stream,this._conn.open("GET","/websocket",!0),this._conn.send()}return t.prototype.httpFactories=function(){return[function(){return new XMLHttpRequest},function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Msxml3.XMLHTTP")},function(){return new ActiveXObject("Microsoft.XMLHTTP")}]},t.prototype.createXMLHttpObject=function(){var e,t,n,r,i;n=!1,e=this.httpFactories();for(r=0,i=e.length;r<i;r++){t=e[r];try{n=t()}catch(s){continue}break}return n},t.prototype.parse_stream=function(){var e,t;if(this._conn.readyState===3)return e=this._conn.responseText.substring(this.last_pos),this.last_pos=this._conn.responseText.length,e=e.replace(/\]\]\[\[/g,"],["),t=JSON.parse(e),this.dispatcher.new_message(t)},t.prototype.trigger=function(e){return this.dispatcher.state!=="connected"?this.message_queue.push(e):this.post_data(this.dispatcher.connection_id,e.serialize())},t.prototype.post_data=function(e,t){return $.ajax("/websocket",{type:"POST",data:{client_id:e,data:t},success:function(){}})},t.prototype.flush_queue=function(e){var t,n,r,i;i=this.message_queue;for(n=0,r=i.length;n<r;n++)t=i[n],e!=null&&(t.connection_id=this.dispatcher.connection_id),this.trigger(t);return this.message_queue=[]},t}()}).call(this);